{"version":3,"sources":["components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navbar","isLinkActive","isActive","cn","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","getPersonByName","find","map","mother","motherName","father","fatherName","born","died","PeoplePage","useState","peopleFromServer","setPeopleFromServer","error","setError","isLoading","setIsLoading","useEffect","data","catch","length","NotFoundPage","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f76561cb.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const isLinkActive = ({ isActive }: { isActive: boolean }): string => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={isLinkActive}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={isLinkActive}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | undefined;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <NavLink\n      to={`${person?.slug}`}\n      className={cn({\n        'has-text-danger': person?.sex === 'f',\n      })}\n    >\n      {person?.name}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const getPersonByName = (name: string): Person | undefined => {\n    return people.find(person => person.name === name);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = getPersonByName(person.motherName || '-');\n          const father = getPersonByName(person.fatherName || '-');\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn({\n                'has-background-warning': slug === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                />\n              </td>\n\n              <td>{person.sex}</td>\n\n              <td>{person.born}</td>\n\n              <td>{person.died}</td>\n\n              <td>\n                {mother ? (\n                  <PersonLink\n                    person={mother}\n                  />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {father ? (\n                  <PersonLink\n                    person={father}\n                  />\n                ) : (\n                  person.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable no-nested-ternary */\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => setPeopleFromServer(data))\n      .then(() => setIsLoading(false))\n      .catch(() => {\n        setIsLoading(false);\n        setError(true);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : error ? (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          ) : peopleFromServer.length ? (\n            <PeopleTable people={peopleFromServer} />\n          ) : (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport './App.scss';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}